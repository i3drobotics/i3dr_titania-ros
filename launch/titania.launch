<?xml version="1.0"?>
<!--XML-->
<launch>
    <!-- SETUP ARGUMENTS -->
    <!-- algorithm 0: OpenCV block -->
    <!-- algorithm 1: OpenCV SGBM -->
    <!-- algorithm 2: I3DR SGM -->
    <arg name="stereo_algorithm" default="0" />
    <!-- enable/disable rviz -->
    <arg name="rviz" default="false" />
    <!-- enable/disable calibration -->
    <arg name="calibrate" default="false"/>
    <!-- enable/disbale stereo matching (3D generation) -->
    <arg name="stereo_match" default="true"/>
    <!-- simulate camera with gazebo -->
    <arg name="sim" default="false"/>
    <!-- namespace for camera -->
    <arg name="camera_namespace" default="i3dr_titania"/>
    <arg name="imu" default="false" /> <!-- ONLY IMPLIMENTED IN SIMULATION -->
    <arg name="depth_max" default="100" />
    <arg name="depth_min" default="0.01" />
    <arg name="gui" default="false" />

    <!-- Load camera images from Rosbag -->
    <!-- Expects the following topics in the bag: -->
    <!-- i3dr_titania/left/camera_info, i3dr_titania/left/image_raw, -->
    <!-- i3dr_titania/right/camera_info, i3dr_titania/right/image_raw -->
    <arg name="bag_file" default="/home/bknight/stereo_matching.bag" />
    <arg name="camera_from_bag" default="false" />

    <arg name="urdf_namespace" default="$(arg camera_namespace)"/>

    <!-- mapping settings -->
    <arg name="map_base_frame_id" default="$(arg urdf_namespace)_base_link)"/>
    <arg name="map" default="false" />
    <arg name="cropByDisp" default="false" />
    <arg name="clearMapOnStart" default="true" />
    <arg name="database_path" default="~/.ros/rtabmap.db" />
    <arg name="localization" default="false" /> <!-- true: map, false: localise -->

    <arg name="exposure" default="20000"/>

    <!-- Use full res camera model mesh (slower) -->
    <arg name="camera_mesh" default="true" />
    
    <arg name="new_gazebo_world" default="true"/>
    <arg name="real" default="$(eval sim == 0 )"/>
    
    <!-- camera calibration files -->
    <arg name="calibration_folder" default="$(find i3dr_titania)/calibration/001" />

    <arg unless="$(arg camera_from_bag)" name="cameraLeft_info_url" default="file://$(arg calibration_folder)/left.yaml" />
    <arg unless="$(arg camera_from_bag)" name="cameraRight_info_url" default="file://$(arg calibration_folder)/right.yaml" />

    <arg if="$(arg camera_from_bag)" name="cameraLeft_info_url" default="$(arg calibration_folder)/left.yaml" />
    <arg if="$(arg camera_from_bag)" name="cameraRight_info_url" default="$(arg calibration_folder)/right.yaml" />

    <!-- Be sure to change this to your cameras id -->
    <arg name="camera_left_device_user_id" default="i3dr_titania_l"/> <!-- 40081086 / i3dr_titania_l -->
    <arg name="camera_right_device_user_id" default="i3dr_titania_r"/>  <!-- 40081087 / i3dr_titania_r -->

    <arg name="state_publisher" default="true"/>
    <group if="$(arg state_publisher)">
        <param name="$(arg camera_namespace)_robot_description" command="$(find xacro)/xacro '$(find i3dr_titania)/urdf/titania_scene.urdf.xacro' en_imu:=$(arg imu) camera_name:=$(arg urdf_namespace) en_mesh:=$(arg camera_mesh) en_collision:=true" />
        <node name="robot_state_publisher_$(arg camera_namespace)" pkg="robot_state_publisher" type="state_publisher">
            <remap from="robot_description" to="$(arg camera_namespace)_robot_description"/>
        </node>
    </group>

    <!-- Simulate camera capture with gazebo -->
    <include if="$(arg sim)" file="$(find i3dr_titania)/launch/titania_sim.launch">
        <arg name="imu" value="$(arg imu)" />
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="urdf_namespace" value="$(arg urdf_namespace)"/>
        <arg name="new_gazebo_world" value="$(arg new_gazebo_world)"/>
    </include>
    <group if="$(arg camera_from_bag)">
        <!-- Load images from rosbag -->
        <node pkg="rosbag" type="play" name="$(arg camera_namespace)_rosbag_play" output="screen" args="--quiet --clock --loop $(arg bag_file) --topics /i3dr_titania/left/image_raw /i3dr_titania/right/image_raw /tf /tf_static"/>
        <!-- Publish CameraInfo from yaml calibration files -->
        <node pkg="i3dr_stereo_camera" type="yaml2CameraInfo.py" name="$(arg camera_namespace)_loadcal_l" output="screen">
            <param name="camera_info_url" value="$(arg cameraLeft_info_url)"/>
            <remap from="/image_raw" to="$(arg camera_namespace)/left/image_raw"/>
            <remap from="/camera_info" to="$(arg camera_namespace)/left/camera_info"/>
        </node>
        <node pkg="i3dr_stereo_camera" type="yaml2CameraInfo.py" name="$(arg camera_namespace)_loadcal_r" output="screen">
            <param name="camera_info_url" value="$(arg cameraRight_info_url)"/>
            <remap from="/image_raw" to="$(arg camera_namespace)/right/image_raw"/>
            <remap from="/camera_info" to="$(arg camera_namespace)/right/camera_info"/>
        </node>
        
    </group>
    <!-- Start image capture from camera -->
    <include if="$(arg real)" file="$(find i3dr_titania)/launch/titania_capture.launch">
        <arg name="exposure" value="$(arg exposure)"/>
        <arg name="rviz" value="false" />
        <arg name="imu" value="$(arg imu)" />
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="urdf_namespace" value="$(arg urdf_namespace)"/>
        <arg name="cameraLeft_info_url"  value="$(arg cameraLeft_info_url)" />
        <arg name="cameraRight_info_url" value="$(arg cameraRight_info_url)" />
        <arg name="camera_left_device_user_id" value="$(arg camera_left_device_user_id)"/>
        <arg name="camera_right_device_user_id" value="$(arg camera_right_device_user_id)"/>
        <arg name="gui" value="false"/>
    </include>

    <include file="$(find i3dr_titania)/launch/titania_processing.launch">
        <arg name="stereo_algorithm" value="$(arg stereo_algorithm)" />
        <arg name="stereo_match" value="$(arg stereo_match)"/>
        <arg name="rviz" value="$(arg rviz)" />
        <arg name="imu" value="$(arg imu)" />
        <arg name="calibrate" value="$(arg calibrate)" />
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="urdf_namespace" value="$(arg urdf_namespace)"/>
        <arg name="map_base_frame_id" value="$(arg map_base_frame_id)"/>
        <arg name="map" value="$(arg map)" />
        <arg name="depth_max" value="$(arg depth_max)" />
        <arg name="depth_min" value="$(arg depth_min)" />
        <arg name="gui" value="$(arg gui)"/>
        <arg name="clearMapOnStart" value="$(arg clearMapOnStart)"/>
        <arg name="database_path" value="$(arg database_path)" />
        <arg name="localization" value="$(arg localization)"/>
    </include>

</launch>
